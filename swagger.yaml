openapi: 3.0.3
info:
  title: Health Tracker API
  description: This is an API that provides health tracker CRUD operations.
  version: 1.0.0
  contact:
    name: Divya Maria Appachan
    email: 20105240@mail.wit.ie
paths:
  /api/users/{user-id}:
    parameters:
      - $ref: '#/components/parameters/userIdParam'
    get:
      responses:
        200:
          description: This is a specific user in the app
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      description: Delete a specific user
      responses:
        204:
          description: User deleted successfully
        404:
          description: User not found
    patch:
      description: Update a specific user
      parameters:
        - $ref: '#/components/parameters/userIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: User updated successfully
        404:
          description: User not found

  /api/users:
    get:
      responses:
        200:
          description: This is a list of the users in the app
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
    post:
      description: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        201:
          description: User created successfully
        404:
          description: User not found
  /api/users/{user-id}/activities:
    get:
      parameters:
        - $ref: '#/components/parameters/userIdParam'
      responses:
        200:
          description: Get activities for a specific user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityList'
        404:
          description: User not found
  /api/users/{user-id}/bmi:
    get:
      parameters:
        - $ref: '#/components/parameters/userIdParam'
      responses:
        200:
          description: Get BMI records for a specific user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BMIList'
        404:
          description: User not found
    delete:

      parameters:
        - $ref: '#/components/parameters/userIdParam'
      responses:
        200:
          description: delete BMI records for a specific user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BMIList'
        404:
          description: User not found
  /api/users/email/{email}:
    get:
      parameters:
        - $ref: '#/components/parameters/emailParam'
      responses:
        200:
          description: Get a user by email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: User not found
  /api/activities:
    get:
      responses:
        200:
          description: Get a list of all activities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityList'
    post:
      description: Create a new activity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        201:
          description: Activity created successfully
        404:
          description: User not found
  /api/activities/{activity-id}:
    get:
      parameters:
        - $ref: '#/components/parameters/activityIdParam'
      responses:
        200:
          description: Get a specific activity by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        404:
          description: Activity not found
    delete:
      description: Delete a specific activity by ID
      parameters:
        - $ref: '#/components/parameters/activityIdParam'
      responses:
        204:
          description: Activity deleted successfully
        404:
          description: Activity not found
    patch:
      description: Update a specific activity by ID
      parameters:
        - $ref: '#/components/parameters/activityIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        204:
          description: Activity updated successfully
        404:
          description: Activity not found
  /api/tip:
    post:
      description: Add a new health tip
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthTip'
      responses:
        201:
          description: Health tip created successfully
    get:
      responses:
        200:
          description: Get a random health tip
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthTip'
        404:
          description: Health tip not found
  /api/tip/{tip-id}:
    patch:
      description: Update a specific health tip
      parameters:
        - $ref: '#/components/parameters/tipIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthTip'
      responses:
        204:
          description: Health tip updated successfully
        404:
          description: Health tip not found
  /api/tips:
    get:
      responses:
        200:
          description: Get a list of all health tips
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthTipList'
        404:
          description: No health tips found
  /api/bmi:
    get:
      responses:
        200:
          description: Get a list of all BMI records
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BMIList'
        404:
          description: No BMI records found
    post:
      description: Calculate BMI
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BMI'
      responses:
        201:
          description: BMI calculated successfully
        404:
          description: User not found
  /api/bmi/{bmi-id}:
    get:
      parameters:
        - $ref: '#/components/parameters/bmiIdParam'
      responses:
        200:
          description: Get a specific BMI record by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BMI'
        404:
          description: BMI record not found
    delete:
      parameters:
        - $ref: '#/components/parameters/bmiIdParam'
      description: Delete a specific BMI record by ID
      responses:
        204:
          description: BMI record deleted successfully
        404:
          description: BMI record not found


components:
  parameters:
    userIdParam:
      in: path
      name: user-id
      required: true
      schema:
        type: integer
        example: 3232
    activityIdParam:
      in: path
      name: activity-id
      required: true
      schema:
        type: integer
        example: 12345
    emailParam:
      in: path
      name: email
      required: true
      schema:
        type: string
        example: joe@soap.com
    tipIdParam:
      in: path
      name: tip-id
      required: true
      schema:
        type: integer
        example: 67890
    bmiIdParam:
      in: path
      name: bmi-id
      required: true
      schema:
        type: integer
        example: 12345



  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 3232
        name:
          type: string
          example: Joe Soap
        email:
          type: string
          example: joe@soap.com

    UserList:
      type: array
      items:
        $ref: '#/components/schemas/User'

    Activity:
      type: object
      properties:
        id:
          type: integer
          example: 12345
        description:
          type: string
          example: Running
        duration:
          type: number
          format: double
          example: 60.5
        calories:
          type: integer
          example: 300
        started:
          type: string
          format: date-time
          example: "2023-11-02T10:00:00Z"
        userId:
          type: integer
          example: 3232
    ActivityList:
      type: array
      items:
        $ref: '#/components/schemas/Activity'
    HealthTip:
      type: object
      properties:
        id:
          type: integer
          example: 67890
        tips:
          type: string
          example: "Tip content"
    HealthTipList:
      type: array
      items:
         $ref: '#/components/schemas/HealthTip'
    BMI:
      type: object
      properties:
        id:
          type: integer
          example: 12345
        weight:
          type: number
          format: double
          example: 70.5
        height:
          type: number
          format: double
          example: 175.0
        userId:
          type: integer
          example: 32366
        bmiCalculator:
          type: string
          example: "BMI Calculator"
        timestamp:
          type: string
          format: date-time
          example: "2023-11-04T14:30:00Z"

    BMIList:
      type: array
      items:
        $ref: '#/components/schemas/BMI'










  
